---
description: "테스트 현황 추적 지침 - 테스트 실행 현황 관리 및 문제점 추적"
globs: ["**/*.py", "**/*.md"]
alwaysApply: true
---

# 테스트 현황 추적 지침 (MANDATORY)

## 테스트 현황 추적 원칙

### ✅ 필수 추적 항목
1. **모듈별 테스트 상태**: 성공/실패/대기 중
2. **테스트 실행 결과**: 통과/실패 개수 및 성공률
3. **문제점 식별**: 실패 원인 및 수정 사항
4. **진행 상황 업데이트**: 마지막 실행 날짜 및 상태

### ❌ 금지 사항
1. **테스트 결과 무시**: 실패한 테스트를 그대로 두기
2. **문서 미업데이트**: 테스트 실행 후 문서 미갱신
3. **문제점 은폐**: 실패 원인을 명확히 기록하지 않기

## 테스트 현황 관리

### 필수 문서화
- **테스트 실행 시**: `docs/TEST_STATUS.md`에 반드시 기록
- **문제점 발견 시**: 즉시 문제점 및 수정 계획 기록
- **수정 완료 시**: 수정 사항 및 재테스트 결과 기록

### 테스트 현황 기록 형식
```markdown
### 모듈명 테스트 (`test_module.py`)
- **상태**: ✅ 성공 / ❌ 실패 / ⏳ 대기 중
- **예상 테스트 수**: N개
- **실행 여부**: ✅ 실행됨 / ❌ 미실행
- **마지막 실행**: YYYY-MM-DD
- **문제점**: 
  - 문제점 1
  - 문제점 2
- **수정 사항**: 
  - 수정 내용 1
  - 수정 내용 2
```

## 테스트 실행 우선순위

### 높은 우선순위 (즉시 실행)
1. **기본 모델 테스트**: Order 모델 등 핵심 모델
2. **설정 관리 테스트**: Config 클래스 등 기본 설정
3. **검증 로직 테스트**: Validator 등 핵심 검증

### 중간 우선순위 (순차적 실행)
4. **관리 로직 테스트**: OrderManager 등 관리 클래스
5. **상태 관리 테스트**: StateMachine 등 상태 관리
6. **통합 테스트**: 실제 의존성 연결 테스트

### 낮은 우선순위 (최적화)
7. **성능 테스트**: 부하 테스트 및 성능 측정
8. **보안 테스트**: 보안 취약점 검사
9. **사용자 경험 테스트**: UI/UX 테스트

## 테스트 실행 체크리스트

### 테스트 실행 전
- [ ] `docs/TEST_STATUS.md`에서 현재 상태 확인
- [ ] 선행 모듈 테스트 완료 여부 확인
- [ ] 테스트 환경 준비 상태 확인
- [ ] Mock 사용 현황 확인

### 테스트 실행 중
- [ ] 개별 테스트 결과 기록
- [ ] 실패한 테스트 원인 분석
- [ ] Mock 사용 현황 업데이트
- [ ] 성능 메트릭 수집

### 테스트 실행 후
- [ ] `docs/TEST_STATUS.md` 업데이트
- [ ] 문제점 및 수정 계획 기록
- [ ] 다음 테스트 모듈 선정
- [ ] 팀원들과 결과 공유

## 테스트 성과 지표

### 목표 지표
- **전체 테스트 성공률**: 95% 이상
- **테스트 커버리지**: 80% 이상
- **통합 테스트 통과율**: 100%
- **테스트 실행 시간**: 5분 이내

### 모니터링 항목
- **일일 테스트 실행 횟수**
- **테스트 실패 패턴 분석**
- **수정 완료까지 소요 시간**
- **테스트 자동화 수준**

## 문제점 분류 및 대응

### 심각도별 분류
1. **Critical**: 전체 시스템 동작 불가
2. **High**: 주요 기능 동작 불가
3. **Medium**: 일부 기능 제한적 동작
4. **Low**: UI/UX 개선 사항

### 대응 우선순위
1. **즉시 수정**: Critical, High 심각도
2. **계획적 수정**: Medium 심각도
3. **여유 시간에 수정**: Low 심각도

## 테스트 실행 명령어

### 개별 모듈 테스트
```bash
# Order 모델 테스트
python -m pytest tests/test_models.py -v

# 설정 관리 테스트
python -m pytest tests/test_config.py -v

# 검증기 테스트
python -m pytest tests/test_validators.py -v

# 주문 관리자 테스트
python -m pytest tests/test_order_manager.py -v

# 주문 상태 머신 테스트
python -m pytest tests/test_order_state_machine.py -v
```

### 통합 테스트
```bash
# 통합 테스트
python -m pytest tests/integration/ -v

# 전체 테스트
python -m pytest tests/ -v

# 커버리지 테스트
python -m pytest tests/ --cov=src --cov-report=html
```

## 테스트 현황 업데이트 규칙

### 업데이트 시점
- **테스트 실행 후**: 즉시 결과 기록
- **문제점 발견 시**: 즉시 문제점 기록
- **수정 완료 시**: 즉시 수정 사항 기록
- **주간 리뷰**: 매주 금요일 전체 현황 리뷰

### 업데이트 형식
```markdown
### 2024-01-XX 업데이트
- [x] Order 모델 테스트 실행 완료 (성공: 45/50)
- [x] Config 클래스 구조 수정 완료
- [ ] 검증기 테스트 수정 진행 중
- [ ] 주문 관리자 테스트 대기 중
```

## 관련 문서
- [테스트 현황](docs/TEST_STATUS.md)
- [테스트 가이드](docs/TESTING_GUIDE.md)
- [Mock 사용 가이드](docs/MOCK_USAGE_GUIDE.md)
- [Mock 사용 현황](docs/MOCK_SUMMARY.md)

description:
globs:
alwaysApply: false
---
description:
globs:
alwaysApply: false
---
